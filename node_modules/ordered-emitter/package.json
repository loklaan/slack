{
  "_args": [
    [
      "ordered-emitter@~0.1.0",
      "/Users/lok/dev/me/slack/node_modules/xhr-write-stream"
    ]
  ],
  "_from": "ordered-emitter@>=0.1.0 <0.2.0",
  "_id": "ordered-emitter@0.1.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/ordered-emitter",
  "_npmUser": {
    "email": "mail@substack.net",
    "name": "substack"
  },
  "_npmVersion": "1.3.0",
  "_phantomChildren": {},
  "_requested": {
    "name": "ordered-emitter",
    "raw": "ordered-emitter@~0.1.0",
    "rawSpec": "~0.1.0",
    "scope": null,
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/xhr-write-stream"
  ],
  "_resolved": "http://registry.npmjs.org/ordered-emitter/-/ordered-emitter-0.1.1.tgz",
  "_shasum": "aa20bdafbdcc1631834a350f68b4ef8eb34eed7b",
  "_shrinkwrap": null,
  "_spec": "ordered-emitter@~0.1.0",
  "_where": "/Users/lok/dev/me/slack/node_modules/xhr-write-stream",
  "author": {
    "email": "mail@substack.net",
    "name": "James Halliday",
    "url": "http://substack.net"
  },
  "bugs": {
    "url": "https://github.com/substack/node-ordered-emitter/issues"
  },
  "dependencies": {},
  "description": "emit events in order",
  "devDependencies": {
    "tap": "~0.4.3"
  },
  "directories": {
    "example": "example",
    "lib": ".",
    "test": "test"
  },
  "dist": {
    "shasum": "aa20bdafbdcc1631834a350f68b4ef8eb34eed7b",
    "tarball": "https://registry.npmjs.org/ordered-emitter/-/ordered-emitter-0.1.1.tgz"
  },
  "engine": {
    "node": ">=0.4"
  },
  "homepage": "https://github.com/substack/node-ordered-emitter#readme",
  "keywords": [
    "buffer",
    "emitter",
    "event",
    "ordered"
  ],
  "license": "MIT/X11",
  "main": "index.js",
  "maintainers": [
    {
      "name": "substack",
      "email": "mail@substack.net"
    }
  ],
  "name": "ordered-emitter",
  "optionalDependencies": {},
  "readme": "ordered-emitter\n===============\n\nBuffer events that may arrive out of order so that they are emitted in order.\n\nJust emit event objects with an `\"order\"` key starting at 0.\n\nexample\n=======\n\nemit.js\n-------\n\n``` js\nvar OrderedEmitter = require('ordered-emitter');\nvar em = new OrderedEmitter;\n\nem.on('beep', function (obj) {\n    console.dir(obj);\n});\n\nvar objects = [\n    { order : 1 },\n    { order : 2 },\n    { order : 4 },\n    { order : 0 },\n    { order : 3 },\n];\n\nvar iv = setInterval(function () {\n    var obj = objects.shift();\n    if (!obj) clearInterval(iv)\n    else em.emit('beep', obj)\n}, 500);\n```\n\noutput:\n\n```\n{ order: 0 }\n{ order: 1 }\n{ order: 2 }\n{ order: 3 }\n{ order: 4 }\n```\n\nspan.js\n-------\n\n``` js\nvar OrderedEmitter = require('ordered-emitter');\nvar em = new OrderedEmitter({ span : true });\n\nem.on('beep', function (obj) {\n    console.log('beep ' + obj.x);\n});\n\nem.on('boop', function (obj) {\n    console.log('boop ' + obj.x);\n});\n\nem.emit('beep', { order : 1, x : 'b' });\nem.emit('beep', { order : 3, x : 'd' });\nem.emit('boop', { order : 0, x : 'a' });\nem.emit('beep', { order : 2, x : 'c' });\nem.emit('boop', { order : 5, x : 'f' });\nem.emit('boop', { order : 4, x : 'e' });\n```\n\noutput:\n\n```\nboop a\nbeep b\nbeep c\nbeep d\nboop e\nboop f\n```\n\nmethods\n=======\n\nvar OrderedEmitter = require('ordered-emitter');\n\nvar em = new OrderedEmitter(opts={})\n------------------------------------\n\n`OrderedEmitter` acts just like an EventEmitter, except that any event that\nemits objects as its first argument with numeric `order` keys will be buffered\nso that the events will be emitted in order.\n\nBy default, order keys are isolated by event names so the order keys from\ndifferent event names won't influence each other. However, you can have order\nkeys work across multiple event names by setting `opts.span` to `true`.\n\nem.reset(eventName)\n-------------------\n\nReset the counter for an ordered emitter back to 0.\n\nIf `eventName` is `undefined`, reset all the counters to 0.\n\ninstall\n=======\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install ordered-emitter\n```\n\nlicense\n=======\n\nMIT/X11\n",
  "readmeFilename": "README.markdown",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/substack/node-ordered-emitter.git"
  },
  "scripts": {
    "test": "tap test"
  },
  "version": "0.1.1"
}
